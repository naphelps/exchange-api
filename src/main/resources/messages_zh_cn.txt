# NLS_MESSAGEFORMAT_ALL
# NLS_ENCODING=UTF-8

access.denied.no.auth=访问被拒绝：“{0}”无授权：{1} {2}
access.denied.no.exchange.front.end=访问被拒绝：未在 config.json 中授权 Exchange 前端
access.denied=访问被拒绝
account.id.invalid.or.not.assigned=帐户标识无效或者未向调用者分配帐户标识
account.id.not.assigned.to.caller=未向调用者分配帐户标识
admins.not.given.permission=未授予管理员许可权 {0}
agbot.added.updated=已添加或更新 agbot
agbot.agreement.deleted=已删除 agbot 协议
agbot.agreements.deleted=已删除 agbot 协议
agbot.agreements.not.deleted=未删除 agbot“{0}”的协议：{1}
agbot.attribute.updated=已更新 agbot“{1}”的属性“{0}”
agbot.deleted=已删除 agbot
agbot.mailbox.full=访问被拒绝：{0} 的消息邮箱已满（{1} 条消息）
agbot.message.agbotid.not.found=找不到 agbot“{0}”：{1}
agbot.message.deleted=已删除 agbot 消息
agbot.message.invalid.input=输入无效：消息发件人必须已向 Exchange 注册其公用密钥
agbot.message.not.deleted=未删除 agbot“{1}”的消息“{0}”：{2}
agbot.message.not.found=找不到 agbot“{1}”的消息“{0}”
agbot.message.not.inserted=未插入 agbot“{0}”消息：{1}
agbot.name.not.in.resource=Agbot 属性名称“{0}”不是 agbot 资源的属性。
agbot.not.deleted=未删除 agbot“{0}”：{1}
agbot.not.found=找不到 agbot“{0}”
agbot.not.inserted.or.updated=未插入或更新 agbot“{0}”：{1}
agbot.not.updated=未更新 agbot“{0}”：{1}
agbot.pattern.deleted=已删除 agbot 模式
agbot.updated= 已更新 agbot
agent.file.versions.deleted.not.message=未删除代理程序文件版本：{0}
agent.file.versions.deleted.not=未删除代理程序文件版本
agent.file.versions.deleted=已删除所有代理程序文件版本
agreement.active=协议活动
agreement.added.or.updated=已添加或更新协议
agreement.for.agbot.not.deleted=未删除 agbot“{1}”的协议“{0}”：{2}
agreement.for.agbot.not.found=找不到 agbot“{1}”的协议“{0}”
agreement.not.found.not.active=找不到协议或者不活动
agreement.not.inserted.or.updated=未插入或更新 agbot“{1}”的协议“{0}”：{2}
already.exists=已存在
anonymous.client.cannot.create.admin=匿名客户无法创建具有管理权限的用户
api.access.denied=访问被拒绝
api.already.exists=已存在
api.bad.creds=凭证无效
api.db.connection.error=数据库连接错误
api.db.timeout=数据库超时
api.internal.error=内部错误
api.invalid.input=输入无效
api.not.found=找不到
api.not.implemented=未实施
arch.cannot.be.empty=体系结构不得为空。
attribute.not.part.of.service=服务属性名称“{0}”不是服务资源的属性。
bad.auth.header=基本认证头缺少“:”或者编码格式错误
bad.input=输入错误
bad.noheartbeat.param=URL 参数“noheartbeat”必须为“true”或“false”
bad.public.param=URL 参数“public”必须为“true”或“false”
business.policy.deleted=已删除业务策略
business.policy.not.deleted=未删除业务策略“{0}”：{1}
business.policy.not.found=找不到业务策略“{0}”
buspol.added=已添加 businessPol {0}
buspol.already.exists=业务策略“{0}”已存在：{1}
buspol.attribute.updated=已更新业务策略“{1}”的属性“{0}”
buspol.created=已创建业务策略“{0}”
buspol.deleted=已删除 agbot 业务策略
buspol.foragbot.already.exists=agbot“{1}”的 businessPol“{0}”已存在
buspol.not.created=未创建业务策略“{0}”：{1}
buspol.not.deleted=未删除 agbot“{1}”的 businessPol“{0}”：{2}
buspol.not.found=找不到 agbot“{1}”的 businessPol“{0}”
buspol.not.in.exchange=引用的业务策略在 Exchange 中不存在
buspol.not.inserted=未插入 agbot“{1}”的 businessPol“{0}”：{2}
buspol.not.updated=未更新业务策略“{0}”：{1}
buspol.updated=已更新业务策略
buspol.wrong.attribute=业务策略属性名称“{0}”不是业务策略资源的属性。
buspols.deleted=已删除 agbot 业务策略
buspols.not.deleted=未删除 agbot“{0}”的 businessPol：{1}
buspols.not.found=找不到 agbot“{0}”的任何业务策略
cache.cleared=已清除高速缓存
cannot.delete.root.org=无法删除 Exchange 根组织
cannot.delete.root.user=无法删除 Exchange root 用户
cannot.patch.these.attributes=不允许修补属性“url”、“version”和“arch”（因为标识将不匹配）。 要更改这些属性，必须删除资源并重新创建。
changes.cleanup.cancel=已取消调度的变更记录清除
changes.cleanup.scheduled=每 {0} 调度一次变更记录清除
changes.not.created=未创建任何变更记录
config.value.set=成功设置配置值
configstate.must.be.suspended.or.active=configState 值必须为“suspended”或“active”。
confirmation.successful=成功确认
created.updated=已创建/已更新
created=已创建
creating.updating.superuser.not.allowed=不允许创建或更新 root 用户
db.deleted=已成功删除数据库
db.downgrade.error=数据库降级错误：在模式表中找不到行
db.downgrade.success=已成功降级数据库表模式
db.exception.upgrading=在升级数据库时，数据库抛出异常：{0}
db.init=已成功初始化数据库
db.migration.in.progress=访问被拒绝 - 在数据库迁移过程中
db.not.deleted=未删除数据库：{0}
db.not.init=未初始化数据库：{0}
db.not.upgraded=未升级数据库表模式：{0}
db.records.not.inserted=数据库无法插入记录
db.table.schemas.not.downgraded=未降级数据库表模式：{0}
db.threw.exception=数据库访问抛出异常：{0}
db.timeout.getting.bool=获取“{1}”的“{0}”布尔值时数据库超时，并且其不在高速缓存中。 {2}
db.timeout.getting.owner=获取“{0}”的所有者或 isAdmin 时数据库超时并且其不在高速缓存中。 {1}
db.timeout.getting.token=获取“{0}”的密码/令牌时数据库超时并且其不在高速缓存中。 {1}
db.timeout.upgrading=升级数据库时数据库超时：{0}
db.upgrade.error=数据库升级错误：在模式表中找不到行
db.upgraded.successfully=已成功初始化或升级数据库表模式
deleted=已删除
did.not.find.registered.services=找不到匹配给定的组织和 URL 条件的任何 registeredServices。
dockauth.must.be.int=dockauthid 必须是整数：{1}
dockauth.not.found=找不到 dockauth {0}
dockauth.num.added=已添加 dockauth {0}
dockauth.resource.updated=已更新 dockauth 资源
dockauth.unexpected=尝试添加 dockauth 时 DB 中出现意外结果
dockauth.updated=已更新 dockauth {0}
documentation.field.not.valid.url=“documentation”字段不是有效的 URL 格式。
done=完成
duplicate.dockauth.resource.already.exists=重复的 dockauth 资源已存在
error.authenticating.iam.token=认证 IAM 令牌时出错：{0}
error.authenticating.icp.iam.key=认证 ICP IAM API 密钥时出错：{0}
error.authenticating.icp.iam.token=认证 ICP IAM 令牌时出错：{0}
error.creating.user.noargs=认证期间创建用户时发生错误
error.creating.user=创建用户 {0}/{1} 时出错：{2}
error.getting.cluster.name=获取 ICP 集群名称时发生错误：{0}
error.getting.iam.token.from.api.key=从 API 密钥获取 IAM 令牌时出错：{0}
error.parsing.input.json=解析输入主体 JSON 时出错：{0}
error.parsing.timestamp=解析时间戳记“{0}”时出错。 正确的格式为 uuuu-MM-dd''T''HH:mm:ss.SSS（例如：“2020-02-05T20:28:14.469Z[UTC]”）
error=错误
exchange.server.operating.normally=Exchange 服务器正常运行
hub.admins.in.root.org=必须在根组织中创建“中心管理员”用户
hub.admins.only.view.admins=“中心管理员”用户只能查看组织管理员用户
hub.admins.only.write.admins=“中心管理员”用户只能创建或更新中心管理员或组织管理员用户
iam.return.value.not.set=重试 {1} 次后 IAM API“{0}” 未成功
in.process.db.migration=访问被拒绝 - 在数据库迁移过程中
incorrect.org.found.user.facing.error.ICP=只有在 {1} 组织（而非 {0} 组织）中才能使用 ICP iamapikey 或 iamtoken 凭证
incorrect.org.found.user.facing.error.mult=指定的 iamapikey 或 iamtoken 无法将组织“{0}”作为前缀，因为 iamapikey 或 iamtoken 与相应组织无关联。
incorrect.org.found.user.facing.error=指定的 iamapikey 或 iamtoken 无法将组织“{0}”作为前缀，因为 iamapikey 或 iamtoken 与相应组织无关联。 （这是相关联的 IBM Cloud 帐户标识 {1}。）
info=信息
invalid.account.id=帐户标识无效
invalid.boolean.value.for.name=针对 {1} 指定了无效的布尔值“{0}”
invalid.credentials.string=凭证格式无效，其缺少“:”或者编码格式错误：{0}
invalid.credentials=凭证无效
invalid.iam.api.key=IAM API 密钥无效
invalid.iam.token=IAM 令牌无效
invalid.input.agbot.not.found=输入无效：找不到 agbot {0}
invalid.input.message=输入无效：{0}
invalid.int.for.name=针对 {1} 指定了无效的整数值“{0}”
invalid.logging.level=指定了无效的日志记录级别“{0}”。
invalid.node.type2=“nodetype”URL 参数必须存在以下某个值：{0}
invalid.node.type=“nodeType”属性必须存在以下某个值：{0}
invalid.op.for.name.opequal=针对 {1} 指定了无效的 op“{0}”（仅针对 propType“{3}”支持“{2}”）
invalid.op.for.name.proplist=针对 {1} 指定了无效的 op“{0}”（仅针对 propType“{3}”和“{4}”支持“{2}”）
invalid.op.for.name.propversion=针对 {1} 指定了无效的 op“{0}”（仅针对 propType“{4}”支持“{2}”或“{3}”）
invalid.op.for.name=针对 {1} 指定了无效的 op“{0}”
invalid.password.i18n=令牌的长度必须至少为 15 个字符，并且至少包含一个数字
invalid.password=令牌的长度必须至少为 15 个字符，并且至少包含一个数字、一个大写英语字母表字母和一个小写英语字母表字母。
invalid.proptype.for.name=针对 {1} 指定了无效的 propType“{0}”
invalid.sharable.value=可共享属性的值“{0}”无效。
invalid.value.for.sharable.attribute=可共享属性的值“{0}”无效。
invalid.version.for.name=针对 {1} 指定了无效的版本值“{0}”
key.added.or.updated=已添加或更新密钥
key.not.found=找不到密钥“{0}”
logging.level.set=已设置日志记录级别
management.policy.deleted=已删除管理策略
management.policy.not.deleted=未删除管理策略“{0}”：{1}
management.policy.not.found=找不到管理策略“{0}”
message.cleanup.cancel=已取消调度的消息清除
message.cleanup.scheduled=每 {0} 调度一次协议 bot 消息和节点消息清除
message.sender.public.key.not.in.exchange=输入无效：消息发件人必须已向 Exchange 注册其公用密钥
mgmtpol.already.exists=管理策略“{0}”已存在：{1}
mgmtpol.attribute.updated=已更新管理策略“{1}”的属性“{0}”
mgmtpol.constraints.or.patterns=不能同时指定约束和模式
mgmtpol.created=已创建管理策略“{0}”
mgmtpol.not.created=未创建管理策略“{0}”：{1}
mgmtpol.not.updated=未更新管理策略“{0}”：{1}
mgmtpol.updated=管理策略已更新
msgid.must.be.int=msgid 必须是整数：{0}
must.specify.service.or.agreementservice=必须至少指定“services”或“agreementService”之一。
no.access.to.org=调用者无权访问组织：{0}
no.agreements.found.for.agbot=找不到 agbot“{0}”的任何协议
no.creds.given=未给定凭证
no.dockauths.found.for.service=找不到服务“{0}”的任何 dockauth
no.node.agreements.found=找不到节点“{0}”的任何协议
no.pattern.keys.found=找不到模式“{0}”的任何密钥
no.service.keys.found=找不到服务“{0}”的任何密钥
no.service.ref.specified.for.service=必须为服务指定“name”、“org”和“arch”这三项
no.services.defined.in.pattern=该模式中找不到任何服务，或者服务字段已留空
no.valid.agbot.attr.specified=未指定任何有效的 agbot 属性
no.valid.agbot.attribute.specified=未指定任何有效的 agbot 属性
no.valid.buspol.attribute.specified=未指定任何有效的业务策略属性
no.valid.iam.keyword=用户不是有效的 IAM 关键字
no.valid.mgmtpol.attribute.specified=未指定有效的管理策略属性
no.valid.node.group.attribute.specified=未指定有效的高可用性节点组属性
no.valid.note.attr.specified=未指定任何有效的节点属性
no.valid.org.attr.specified=未指定任何有效的组织属性
no.valid.pattern.attribute.specified=未指定任何有效的模式属性
no.valid.service.attr.specified=未指定任何有效的服务属性
no.version.range.in.req.service=必需的服务“{0}”不包含 versionRange
no.version.specified.for.service2=未针对服务指定任何版本
no.version.specified.for.service=未针对服务“{0}”、“{1}”和“{2}”指定任何版本
node.added.or.updated=已添加或更新节点
node.agreement.added.or.updated=已添加或更新协议
node.agreement.deleted=已删除节点协议
node.agreement.not.deleted=未删除节点“{1}”的协议“{0}”：{2}
node.agreement.not.found=找不到节点“{1}”的协议“{0}”
node.agreement.not.inserted.or.updated=未插入或更新节点“{1}”的协议“{0}”：{2}
node.agreement.not.updated=未更新节点“{0}”的协议：{1}
node.agreements.deleted=已删除节点协议
node.agreements.not.deleted=未删除节点“{0}”的协议：{1}
node.attribute.updated=已更新节点“{1}”的属性“{0}”
node.deleted=已删除节点
node.errors.added=已添加或更新节点错误
node.errors.deleted=已删除节点错误
node.errors.not.deleted=未删除节点“{0}”的错误：{1}
node.errors.not.found=找不到节点“{0}”的错误
node.errors.not.inserted=未插入或更新节点“{0}”的错误：{1}
node.group.access.denied=您无权编辑此高可用性节点组（您未拥有分配给此组的所有节点）
node.group.already.exists=高可用性节点组“{0}”已存在
node.group.conflict=提供的某些节点已存在于其他高可用性节点组中
node.group.created=已创建高可用性节点组“{0}”
node.group.node.access.denied=您无权编辑请求主体中提供的所有节点，且/或请求主体中提供的某些节点不存在
node.group.node.conflict=节点“{0}”存在于另一个高可用性节点组中
node.group.node.inserted=
node.group.node.not.deleted=未删除高可用性节点组成员“{0}”：{1}
node.group.node.not.inserted=未插入高可用性节点组成员“{0}”：{1}
node.group.node.not.found=找不到高可用性节点组成员“{0}”
node.group.not.deleted=未删除高可用性节点组“{0}”：{1}
node.group.not.found=找不到高可用性节点组“{0}”
node.group.not.updated=未更新组织“{1}”中的高可用性节点组“{0}”：“{2}”
node.group.updated.successfully=已成功更新组织“{1}”中的高可用性节点组“{0}”
node.has.no.services=节点无任何 registeredServices 以更改其 configState。
node.id.not.iamapikey.or.iamtoken=节点标识不能为“iamapikey”或“iamtoken”
node.mailbox.full=访问被拒绝：{0} 的消息邮箱已满（{1} 条消息）
node.managementpolicy.status.added.or.updated=已为节点“{1}”的管理策略“{0}”添加或更新状态。
node.managementpolicy.status.deleted=已删除节点“{1}”的管理策略“{0}”的状态
node.managementpolicy.status.not.deleted=未删除节点“{1}”的管理策略“{0}”状态：{2}
node.managementpolicy.status.not.found=找不到节点“{1}”的管理策略“{0}”的状态
node.managementpolicy.status.not.inserted.or.updated=未插入或更新节点“{1}”的管理策略“{0}”状态：{2}
node.msg.deleted=已删除节点消息
node.msg.inserted=已插入节点消息 {0}
node.msg.nodeid.not.found=找不到节点“{0}”：{1}
node.msg.not.deleted=未删除节点“{1}”的消息“{0}”：{2}
node.msg.not.found=找不到节点“{1}”的消息“{0}”
node.msg.not.inserted=未插入节点“{0}”消息：{1}
node.not.deleted=未删除节点“{0}”：{1}
node.not.found=找不到节点“{0}”
node.not.inserted.or.updated=未插入或更新节点“{0}”：{1}
node.not.updated=未更新节点“{0}”：{1}
node.or.agbot.not.found=找不到节点或 agbot“{0}”
node.org.must.equal.bus.pol.org=当前 nodeOrgid 必须与 businessPolOrgid 相同，因为业务策略只能用于定义其的组织中
node.policy.added.or.updated=已添加或更新策略
node.policy.deleted=已删除节点策略
node.policy.not.deleted=未删除节点“{0}”的策略：{1}
node.policy.not.found=找不到节点“{0}”的策略
node.policy.not.inserted.or.updated=未插入或更新节点“{0}”的策略：{1}
node.policy.not.updated=未更新节点“{0}”的策略：{1}
node.services.updated=已更细节点“{0}”的 registeredServices
node.status.deleted=已删除节点状态
node.status.not.deleted=未删除节点“{0}”的状态：{1}
node.status.not.found=找不到节点“{0}”的状态
node.status.not.inserted.or.updated=未插入或更新节点“{0}”的状态：{1}
node.updated=已更新节点
non.admin.user.cannot.make.admin.user=无管理权限的用户无法授予管理特权
not.a.node.attribute=节点属性名称“{0}”不是节点资源的属性。
not.found=找不到
not.pattern.when.policy=无法在节点已在使用策略时设置模式
num.nodes.near.org.limit=组织 {0} 已达到节点限制的 95%：{1} 个节点。
ok=确定
only.ibm.patterns.can.be.public=仅 IBM 模式可设为公用
only.super.users.make.hub.admins=此用户无权生成“中心管理员”
only.use.basic.auth=如果在头中指定了“授权”字段，那么当前仅支持基本认证
org.already.exists=组织“{0}”已存在：{1}
org.attr.not.part.of.org=组织属性名称“{0}”不是组织资源的属性。
org.attr.updated=已更新组织“{1}”的属性“{0}”
org.created=已创建组织“{0}”
org.deleted=已删除组织
org.get.orgtype=组织类型必须为“IBM”或空白
org.limits.cannot.be.over.exchange.limits=特定于组织的限制不能超过全局 Exchange 限制。 组织限制：{0}；Exchange 限制：{1}
org.not.created=未创建组织“{0}”：{1}
org.not.deleted=未删除组织“{0}”：{1}
org.not.found.user.facing.error=指定的 iamapikey 或 iamtoken 无法将组织“{0}”作为前缀，因为 Exchange 未将其视为 iamapikey 或 iamtoken 的有效 IBM Cloud 组织
org.not.found=找不到组织“{0}”
org.not.specified=开始请求凭证时未指定任何组织
org.not.updated=未更新组织“{0}”：{1}
org.updated=已更新组织
over.limit.of.agreements.for.node=访问被拒绝：您已超过此节点的 {0} 个协议的限制
over.limit.of.max.patterns=访问被拒绝：您已超过 {0} 个模式的限制
over.max.limit.buspols=访问被拒绝：您已超过 {0} 个业务策略的限制
over.max.limit.mgmtpols=访问被拒绝：您超过了 {0} 管理策略的限制
over.max.limit.of.agbots=访问被拒绝：您已超过 {0} 个 agbot 的限制
over.max.limit.of.agreements=访问被拒绝：您已超过此 agbot 的 {0} 个协议的限制
over.max.limit.of.nodes=访问被拒绝：您已超过 {0} 个节点的限制
over.org.max.limit.of.nodes=访问被拒绝：节点的当前总数 {0} 等于或超过 {1} 个节点的组织限制
over.the.limit.of.services=访问被拒绝：您已超过 {0} 个服务的限制
password.cannot.be.set.to.empty.string=密码不能设置为空字符串
password.must.be.non.blank.when.creating.user=在创建用户时，密码必须非空
password.updated.successfully=已成功更新密码
pattern.added=已添加模式 {0}
pattern.already.exists=模式“{0}”已存在：{1}
pattern.attr.not.in.pattern=模式属性名称“{0}”不是模式资源的属性。
pattern.attribute.not.update=已更新模式“{1}”的属性“{0}”
pattern.created=已创建模式“{0}”
pattern.definition.not.signed=此模式定义未签名。
pattern.deleted=已删除模式
pattern.foragbot.already.exists=agbot“{1}”的模式“{0}”已存在
pattern.id.not.deleted=未删除模式“{0}”：{1}
pattern.id.not.found=找不到模式“{0}”
pattern.key.deleted=已删除模式密钥
pattern.key.not.deleted=未删除模式“{1}”的密钥“{0}”：{2}
pattern.key.not.found=找不到模式“{1}”的密钥“{0}”
pattern.key.not.inserted.or.updated=未插入或更新模式“{1}”的密钥“{0}”：{2}
pattern.keys.deleted=已删除模式密钥
pattern.keys.not.deleted=未删除模式“{0}”的密钥：{1}
pattern.must.have.orgid.prepended=“pattern”属性必须前缀以斜杠分隔的组织标识
pattern.not.created=未创建模式“{0}”：{1}
pattern.not.deleted=未删除 agbot“{1}”的模式“{0}”：{2}
pattern.not.found=找不到 agbot“{1}”的模式“{0}”
pattern.not.in.exchange=引用的模式在 Exchange 中不存在
pattern.not.inserted=未插入 agbot“{1}”的模式“{0}”：{2}
pattern.not.updated=未更新模式“{0}”：{1}
pattern.updated=已更新模式
patterns.deleted=已删除 agbot 模式
patterns.not.deleted=未删除 agbot“{0}”的模式：{1}
patterns.not.found=找不到 agbot“{0}”的任何模式
pkcs12.not.found=在文件系统上找不到 TLS PKCS #12“{0}”
pkcs12.password.incorrect=TLS PKCS #12 密码不正确
policy.added.or.updated=已添加或更新策略
policy.not.inserted.or.updated=未插入或更新服务“{0}”的策略：{1}
post.ok=发布确定
property.type.must.be=properties.type 值“{0}”必须为以下之一：{1}
reload.successful=重新装入成功
req.service.has.wrong.arch=必需的服务“{0}”具有体系结构“{1}”，这不同于此服务的体系结构“{2}”
req.service.not.in.exchange=Exchange 中不存在以下必需的服务：组织 = {0}，URL = {1}，版本 = {2}，体系结构 = {3}
required.headers.not.set=已设置前端头 {0}，但是未设置其余的必需头
resource.not.found=找不到资源“{0}”
server.start.failure.http=HTTP 服务器无法启动！
server.start.failure.https=HTTPS 服务器无法启动！
server.start=服务器在 {0} 联机
service.already.exists=服务“{0}”已存在：{1}
service.attr.updated=已更新服务“{1}”的属性“{0}”
service.created=已创建服务“{0}”
service.def.not.signed=此服务定义未签名。
service.deleted=已删除服务
service.dockauth.not.inserted=未插入服务“{1}”的 dockAuthId“{0}”：{1}
service.dockauth.not.updated=未更新服务“{2}”的 dockAuthId“{0}”：{1}
service.dockauths.deleted=已删除服务 dockauth
service.dockauths.not.deleted=未删除服务“{0}”的 dockauth：{1}
service.dockauths.not.found=找不到服务“{1}”的 dockauth“{0}”
service.id.does.not.match=URL 中指定的服务标识不匹配主体中的 URL、版本和体系结构。
service.key.deleted=已删除服务密钥
service.key.not.deleted=未删除服务“{1}”的密钥“{0}”：{2}
service.key.not.found=找不到服务“{1}”的密钥“{0}”
service.key.not.inserted.or.updated=未插入或更新服务“{1}”的密钥“{0}”：{2}
service.keys.deleted=已删除服务密钥
service.keys.not.deleted=未删除服务“{0}”的密钥：{1}
service.not.created=未创建服务“{0}”：{1}
service.not.deleted=未删除服务“{0}”：{1}
service.not.found=找不到服务“{0}”
service.not.in.exchange.index=Exchange 中不存在 {0} 引用的服务
service.not.in.exchange.no.index=Exchange 中不存在以下引用的服务：组织 = {0}，URL = {1}，版本 = {2}，体系结构 = {3}
service.not.in.pattern=搜索主体中指定的 serviceUrl“{0}”在模式“{1}”中不存在
service.not.updated=未更新服务“{0}”：{1}
service.policy.deleted=已删除服务策略
service.policy.not.deleted=未删除服务“{0}”的策略：{1}
service.policy.not.found=找不到服务“{0}”的策略
service.updated=已更新服务
services.configstate.org.not.specified=组织属性对于请求主体中的特定 URL 或版本不够详细。
services.configstate.url.not.specified=如果未指定 URL 属性，那么找不到版本。
status.added.or.updated=已添加或更新状态
token.cannot.be.empty.string=令牌不能设置为空字符串
token.must.not.be.blank=指定的令牌不得为空
token.specified.cannot.be.blank=指定的令牌不得为空
too.busy=太忙
unable.to.get.http.request.when.authenticating=无法在认证时获取 HTTP 请求
unexpected.identity=从前端返回意外的身份类型 {0}
unexpected.result.from.update=从更新返回意外的结果：{0}
unexpected.uri=意外的 URI
unknown.error.invalid.creds=未知的错误或无效的凭证
updated=已更新
user.added.or.updated.successfully=已成功添加或更新 {0} 用户
user.added.successfully=已成功添加 {0} 用户
user.attr.updated=已更新用户“{1}”的属性“{0}”
user.cannot.be.in.root.org=仅 root 用户和中心管理员才能存在于根组织中
user.deleted=已删除用户
user.not.added.or.updated.successfully=未添加或更新用户：{0}
user.not.added=未添加用户：{0}
user.not.deleted=未删除用户“{0}”：{1}
user.not.found=找不到用户“{0}”
user.not.inserted.or.updated=未插入或更新用户“{0}”：{1}
user.not.updated=用户未更新：{0}
user.password.not.updated=未更新用户“{0}”密码：{1}
user.updated.successfully=已成功更新用户
username.not.found=找不到用户名
version.not.valid.format=版本“{0}”不是有效的版本格式。
warning=警告
