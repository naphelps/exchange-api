name: Build Container Images

on:
  workflow_call:
  workflow_dispatch:

env:
  IMAGE_REPO: ${{ vars.DOCKERHUB_REPO }}
  GITHUB_CONTAINER_REGISTRY: ghcr.io/${{ github.repository_owner }}
  GH_BRANCH: ${{ github.ref_name }}
  RUN_NUMBER: ${{ github.run_number }}
  RUN_NUMBER_OFFSET: ${{ vars.RUN_NUMBER_OFFSET }}

jobs:
  something:
    runs-on: ubuntu-latest

    steps:
      # Cache the entire project directory, Corsair dependency cache, and deliverables.
      - name: Cache Project Directories and Files
        id: cache-project
        uses: actions/cache@v4
        with:
          path: |
            ~/work/*
            !~/work/exchange-api/exchange-api/.github
            !~/work/exchange-api/exchange-api/target
          key: checkout-and-compile-project-${{ github.sha }}

      - name: Cache GitHub Workflows
        id: cache-workflow
        uses: actions/cache@v4
        with:
          path: |
            ~/work/exchange-api/exchange-api/.github
          key: checkout-and-compile-workflow-${{ github.sha }}

      # On cache hit, nothing will need to be downloaded.
      # By not downloading and overwriting our project directories anf files, SBT will need to not rebuild.
      # Based on directory and file system change timestamps.
      - name: Checkout Github Repo
        #if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          clean: false

      - name: Cache Dependency Directories and Files
        id: cache-dependency
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.cache/coursier/cache
          key: checkout-and-compile-dependencies-${{ hashFiles('**/build.sbt') }}
          restore-keys: checkout-and-compile-dependency-

      - name: Configure Env Vars
        run: |
          BUILD_NUMBER=$(($RUN_NUMBER + $RUN_NUMBER_OFFSET))
          echo "IMAGE_VERSION=$(head -n 1 src/main/resources/version.txt)-$BUILD_NUMBER" >> $GITHUB_ENV
          echo "GIT_SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Setup Scala
        uses: coursier/setup-action@v1
        with:
          apps: sbt
          jvm: temurin:1.21

      - name: Cache Build Deliverables
        id: cache-deliverable
        uses: actions/cache@v4
        with:
          path: ~/work/exchange-api/exchange-api/target
          key: checkout-and-compile-deliverable-${{ github.sha }}

      # On cache hit, project has already been compiled, packaged, and staged. Nothing to do.
      - name: Compile, Package, and Stage Dockerfile
        run: |
          sbt Docker/stage

      - name: ls ~/
        continue-on-error: true
        run: |
          ls -ahl ~

      - name: ls
        continue-on-error: true
        run: |
          pwd
          ls -ahl

      - name: ls ./target
        continue-on-error: true
        run: ls -ah ./target

      - name: ls ./target/scala-2.13
        continue-on-error: true
        run: ls -ah ./target/scala-2.13

      - name: ls /home/runner
        continue-on-error: true
        run: ls -ah /home/runner

      - name: ls /home/runner/.cache
        continue-on-error: true
        run: ls -ah /home/runner/.cache

      #- name: Upload Artifacts
      #  uses: actions/upload-artifact@v4
      #  with:
      #    include-hidden-files: true
      #    name: exchange-api-${{ github.sha }}
      #    path: |
      #      ./**/*


  something2:
    runs-on: ubuntu-latest
    needs: [something]
    steps:
      - name: Restore Checkout & Compile Deliverables
        id: cache-deliverable-restore
        uses: actions/cache/restore@v4
        with:
          path: ~/work/exchange-api/exchange-api/target
          key: checkout-and-compile-deliverable-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore Checkout & Compile Deliverables
        id: cache-workflow-restore
        uses: actions/cache/restore@v4
        with:
          path: ~/work/exchange-api/exchange-api/.github
          key: checkout-and-compile-workflow-${{ github.sha }}

      - name: Checkout Github Repo
        if: steps.cache-workflow-restore.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          clean: false

      #- uses: ./.github/workflows/gh-workflow.yml

      - name: Configure Env Vars
        run: |
          BUILD_NUMBER=$(($RUN_NUMBER + $RUN_NUMBER_OFFSET))
          echo "IMAGE_VERSION=$(head -n 1 src/main/resources/version.txt)-$BUILD_NUMBER" >> $GITHUB_ENV
          echo "GIT_SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      #- name: Setup Scala
      #  uses: coursier/setup-action@v1
      #  with:
      #    apps: sbt
      #    jvm: temurin:1.21

      # QEMU for software emulation of multiple platforms
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      # Docker buildx/buildkit for multi-platform builds
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Authenticate GHCR to allow pushing to our alternate image registry
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/exchange-api:latest
          # cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/exchange-api:latest,mode=max
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: target/docker/stage
          file: target/docker/stage/Dockerfile
          push: false
          tags: ghcr.io/naphelps/exchange-api:latest

      - name: ls
        continue-on-error: true
        run: ls -ahl

      - name: ls ci
        continue-on-error: true
        run: ls -ahl c
